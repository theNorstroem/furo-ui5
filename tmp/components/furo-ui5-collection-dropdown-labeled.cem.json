{
  "kind": "javascript-module",
  "path": "src/furo-ui5-collection-dropdown-labeled.js",
  "declarations": [
    {
      "kind": "class",
      "description": "`furo-ui5-collection-dropdown-labeled`\nThe furo-ui5-collection-dropdown-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "name": "FuroUi5CollectionDropdownLabeled",
      "members": [
        {
          "kind": "method",
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private"
        },
        {
          "kind": "method",
          "name": "bindData",
          "parameters": [
            {
              "name": "fieldNode",
              "type": {
                "text": "FieldNode"
              }
            }
          ],
          "description": "Orchestrates the data field connection to the inside"
        },
        {
          "kind": "method",
          "name": "injectEntities",
          "parameters": [
            {
              "name": "entities"
            }
          ],
          "description": "Inject the array of a collection"
        },
        {
          "kind": "field",
          "name": "label",
          "type": {
            "text": "string"
          },
          "default": "''",
          "privacy": "public",
          "description": "the label for the data-collection-dropdown",
          "attribute": "label"
        },
        {
          "kind": "field",
          "name": "subField",
          "type": {
            "text": "string"
          },
          "default": "'data'",
          "privacy": "public",
          "description": "If you inject an array with complex objects, declare here the path where display_name and value_field are located.\n\nThis is only needed if display_name and value_field are not located in the root of the object.",
          "attribute": "sub-field",
          "reflects": true
        },
        {
          "kind": "field",
          "name": "displayField",
          "type": {
            "text": "string"
          },
          "default": "'display_name'",
          "privacy": "public",
          "description": "The name of the field from the injected collection that contains the label for the dropdown array.",
          "attribute": "display-field",
          "reflects": true
        },
        {
          "kind": "field",
          "name": "valueField",
          "type": {
            "text": "string"
          },
          "default": "'id'",
          "privacy": "public",
          "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\nIf you bind a scalar, you dont need this attribute.",
          "attribute": "value-field",
          "reflects": true
        },
        {
          "kind": "field",
          "name": "valueSubField",
          "type": {
            "text": "null"
          },
          "default": "null",
          "privacy": "public",
          "description": "if you bind a complex type, declare here the field which gets updated of value by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "attribute": "value-sub-field",
          "reflects": true
        },
        {
          "kind": "field",
          "name": "displaySubField",
          "type": {
            "text": "string"
          },
          "default": "'display_name'",
          "privacy": "public",
          "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "attribute": "display-sub-field",
          "reflects": true
        },
        {
          "kind": "field",
          "name": "autoSelectFirst",
          "type": {
            "text": "boolean"
          },
          "default": "false",
          "privacy": "public",
          "description": "set this attribute to autoSelectFirst the first item in the list, if no item is set in the bounded fieldNode",
          "attribute": "auto-select-first",
          "reflects": true
        },
        {
          "kind": "field",
          "name": "disabled",
          "privacy": "public",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "attribute": "disabled"
        },
        {
          "kind": "field",
          "name": "required",
          "privacy": "public",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "attribute": "required"
        }
      ],
      "events": [
        {
          "type": {
            "text": "{*} the value from the value-field. By default the value field is \"id\""
          },
          "description": " Fired when value has changed from the component inside. **bubbles**",
          "name": "value-changed"
        }
      ],
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-collection-dropdown",
          "fieldName": "label"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "fieldName": "disabled"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "fieldName": "required"
        },
        {
          "name": "sub-field",
          "description": "If you inject an array with complex objects, declare here the path where display_name and value_field are located.\n\nThis is only needed if display_name and value_field are not located in the root of the object.",
          "fieldName": "subField"
        },
        {
          "name": "display-field",
          "description": "The name of the field from the injected collection that contains the label for the dropdown array.",
          "fieldName": "displayField"
        },
        {
          "name": "value-field",
          "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\nIf you bind a scalar, you dont need this attribute.",
          "fieldName": "valueField"
        },
        {
          "name": "value-sub-field",
          "description": "if you bind a complex type, declare here the field which gets updated of value by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "fieldName": "valueSubField"
        },
        {
          "name": "display-sub-field",
          "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "fieldName": "displaySubField"
        },
        {
          "name": "auto-select-first",
          "description": "set this attribute to autoSelectFirst the first item in the list, if no item is set in the bounded fieldNode",
          "type": {
            "text": "boolean"
          },
          "fieldName": "autoSelectFirst"
        }
      ],
      "mixins": [
        {
          "name": "FBP",
          "package": "@furo/fbp/src/fbp.js"
        }
      ],
      "superclass": {
        "name": "LitElement",
        "package": "lit"
      },
      "summary": "labeled input field",
      "tagName": "furo-ui5-collection-dropdown-labeled",
      "customElement": true
    }
  ],
  "exports": [
    {
      "kind": "js",
      "name": "FuroUi5CollectionDropdownLabeled",
      "declaration": {
        "name": "FuroUi5CollectionDropdownLabeled",
        "module": "src/furo-ui5-collection-dropdown-labeled.js"
      }
    },
    {
      "kind": "custom-element-definition",
      "name": "furo-ui5-collection-dropdown-labeled",
      "declaration": {
        "name": "FuroUi5CollectionDropdownLabeled",
        "module": "src/furo-ui5-collection-dropdown-labeled.js"
      }
    }
  ]
}
