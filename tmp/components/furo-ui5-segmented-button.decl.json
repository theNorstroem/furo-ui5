{
  "kind": "class",
  "description": "`furo-ui5-segmented-button`\nThe furo-ui5-segmented-button component represents a drop-down list. The items inside define the available\noptions by using the furo-ui5-segmented-button component.\n\n```\n<furo-ui5-segmented-button\n   ƒ-bind-data=\"--daoPerson(*.field_with_meta_options)\">\n</furo-ui5-segmented-button>\n```\n```\n<furo-ui5-segmented-button\n   ƒ-bind-data=\"--daoPerson(*.field)\">\n     <ui5-segmented-button-item pressed>Option A</ui5-segmented-button-item>\n     <ui5-segmented-button-item>Option B</ui5-segmented-button-item>\n</furo-ui5-segmented-button>\n```",
  "name": "FuroUi5SegmentedButton",
  "members": [
    {
      "kind": "method",
      "name": "bindData",
      "parameters": [
        {
          "name": "fieldNode",
          "type": {
            "text": "FieldNode"
          }
        }
      ],
      "description": "overwrite bindData of FieldNodeAdapter",
      "return": {
        "type": {
          "text": "boolean"
        }
      }
    },
    {
      "kind": "method",
      "name": "bindOptions",
      "parameters": [
        {
          "name": "repeaterNode"
        }
      ],
      "description": "Here a RepeaterNode can be connected to the component as an option list."
    },
    {
      "kind": "method",
      "name": "readAttributes",
      "description": "Reads the attributes which are set on the component dom.\nthose attributes can be set. `readonly`,`disabled`, `value-field-path`, `display-field-path`\nUse this after manual or scripted update of the attributes."
    },
    {
      "kind": "method",
      "name": "onFnaFieldValueChanged",
      "parameters": [
        {
          "name": "val"
        }
      ],
      "description": "overwrite onFnaFieldValueChanged",
      "privacy": "private"
    },
    {
      "kind": "method",
      "name": "onFnaReadonlyChanged",
      "parameters": [
        {
          "name": "readonly"
        }
      ],
      "description": "overwrite onFnaReadonlyChanged function",
      "privacy": "private"
    },
    {
      "kind": "method",
      "name": "onFnaOptionsChanged",
      "parameters": [
        {
          "name": "options"
        }
      ],
      "description": "Overwrite onFnaOptionsChanged\nNotifies when the options for the field is changed or set.",
      "privacy": "private"
    },
    {
      "kind": "method",
      "name": "selectOptionById",
      "parameters": [
        {
          "name": "val"
        },
        {
          "name": "id"
        }
      ],
      "description": "Selects an option by id"
    },
    {
      "kind": "method",
      "name": "getValueByPath",
      "static": true,
      "parameters": [
        {
          "name": "obj"
        },
        {
          "name": "path"
        }
      ],
      "description": "Let you get an attribute value by path",
      "return": {
        "type": {
          "text": ""
        }
      },
      "privacy": "private"
    },
    {
      "kind": "method",
      "name": "_updateFNA",
      "parameters": [
        {
          "name": "e"
        }
      ],
      "description": "Handler function for the select value changes.\nThis is done to be able to remove the event-listeners as a protection for multiple calls",
      "return": {
        "type": {
          "text": "(function(): void)|*"
        }
      },
      "privacy": "private"
    },
    {
      "kind": "method",
      "name": "_updateOptions",
      "parameters": [
        {
          "name": "list"
        }
      ],
      "description": "Maps and updates array of option",
      "privacy": "private"
    },
    {
      "kind": "field",
      "name": "_tagItemComponent",
      "type": {
        "text": "string"
      },
      "description": "Inner component tag",
      "privacy": "private",
      "default": "'ui5-segmented-button-item'"
    },
    {
      "kind": "field",
      "name": "activeFieldBinding",
      "type": {
        "text": "boolean"
      },
      "description": "Flag to indicate if a field is attached\nDefault: false",
      "default": "false"
    },
    {
      "kind": "field",
      "name": "idFieldPath",
      "type": {
        "text": "string"
      },
      "description": "Defines the field path that is used from the injected RepeaterNode to identify the option items.\nPoint-separated path to the field\nE.g. data.partner.ulid\ndefault: id",
      "default": "'id'"
    },
    {
      "kind": "field",
      "name": "displayFieldPath",
      "type": {
        "text": "string"
      },
      "description": "Defines the field path that is used from the injected RepeaterNode to display the option items.\nPoint-separated path to the field\nE.g. data.partner.display_name\ndefault: display_name",
      "default": "'display_name'"
    },
    {
      "kind": "field",
      "name": "valueFieldPath",
      "type": {
        "text": "string"
      },
      "description": "Defines the field path that is used to update the bound component if the user has selected an option.\nPoint-separated path to the field\nMust be set if a data binding is specified.\ndefault: id",
      "default": "'id'"
    },
    {
      "kind": "field",
      "name": "_optionList",
      "type": {
        "text": "*[]"
      },
      "description": "Internal RepeaterNode\nDefines the ui5-select options.\nNote: Only one selected option is allowed. If more than one option is defined as selected, the last one would be considered as the selected one.",
      "privacy": "private",
      "default": "[]"
    },
    {
      "kind": "field",
      "name": "_attributesFromFNA",
      "type": {
        "text": "object"
      },
      "default": "{\n      readonly: undefined,\n    }"
    },
    {
      "kind": "field",
      "name": "_constraintsFromFNA",
      "type": {
        "text": "object"
      },
      "default": "{\n      required: undefined,\n    }"
    },
    {
      "kind": "field",
      "name": "_labelsFromFAT",
      "type": {
        "text": "object"
      },
      "default": "{\n      readonly: undefined,\n      disabled: undefined,\n      required: undefined,\n    }"
    },
    {
      "kind": "field",
      "name": "_attributesFromFAT",
      "type": {
        "text": "object"
      },
      "default": "{}"
    },
    {
      "kind": "field",
      "name": "_privilegedAttributes",
      "type": {
        "text": "object"
      },
      "description": "a list of privileged attributes. when those attributes are set in furo-ui5-select components initially.\nthey can not be modified later via response or spec\nnull is used because getAttribute returns null or value",
      "default": "{\n      readonly: null,\n      required: null,\n      disabled: null,\n      'id-field-path': 'id',\n      'value-field-path': 'id',\n      'display-field-path': 'display_name',\n    }"
    }
  ],
  "events": [
    {
      "name": "options-updated",
      "type": {
        "text": "optionNodeList"
      },
      "description": "Fired  after the option list was rebuilt"
    },
    {
      "type": {
        "text": "{*} the value from the value-field. By default the value field is \"id\""
      },
      "description": " Fired when value has changed from the component inside. **bubbles**",
      "name": "value-changed"
    },
    {
      "type": {
        "text": "selectedOption"
      },
      "description": "Fired when the toggle button was clicked. Payload: - if no option binding is active: ui5-segmented-button-item - if a RepeaterNode is bound: FieldNode",
      "name": "item-selected"
    }
  ],
  "mixins": [
    {
      "name": "FieldNodeAdapter",
      "package": "@furo/data/src/lib/FieldNodeAdapter.js"
    }
  ],
  "superclass": {
    "module": "src/furo-ui5-segmented-button.js"
  },
  "summary": "segmented button",
  "tagName": "furo-ui5-segmented-button",
  "customElement": true
}
