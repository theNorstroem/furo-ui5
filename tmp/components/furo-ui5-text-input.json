{
  "decl": {
    "kind": "class",
    "description": "The 'furo-ui5-text-input' component allows the user to enter and edit texts with data binding.\n\nIt supports all features from the [SAP ui5 Input element](https://sap.github.io/ui5-webcomponents/playground/components/Input/).\n\nYou can bind any `string` type, like `furo.fat.String` type or the `google.protobuf.StringValue` type.\n\n```html\n <furo-ui5-text-input\n    Æ’-bind-data=\"--daoCountry(*.data.name)\"\n ></furo-ui5-text-input>\n```\n\n### Specificity\n1. Attributes which are set in the html source will have the highest specificity and will never get overwritten by metas or fat.\n2. Attributes set in meta will have the lowest specificity and will be overwritten by attributes from fat.\n\n** meta \t<  fat \t< html \t**\n\n## supported FAT attributes\n - **\"readonly\":\"true\"** set the element to readonly\n - **\"required\":\"true\"** set the element to required\n - **\"disabled\":\"true\"** set the element to disabled\n - **\"icon\":\"home\"** set the icon\n - **\"placeholder\":\"string\"** set the placeholder for the element\n - **\"max\":\"number\"** set the maximum number of characters available in the input field.\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n- **placeholder:\"some string\"** set the placeholder for the element\n- **max:\"number\"** set the maximum number of characters available in the input field.\n\nThe constraint **required** will mark the element as required\n\n## Methods\n**bind-data(fieldNode)**\nBind a entity field. You can use the entity even when no data was received.\n\nWhen you use @-object-ready from a furo-data-object which emits a EntityNode, just bind the field with --entity(*.fields.fieldname)",
    "name": "FuroUi5TextInput",
    "members": [
      {
        "kind": "field",
        "name": "nativeInputAttributes"
      },
      {
        "kind": "method",
        "name": "readAttributes",
        "description": "Reads the attributes which are set on the component dom.\nthose attributes can be set. `value-state`, `value-state-message`,  `icon`, `placeholder`, `required`,`readonly`,`disabled`\nUse this after manual or scripted update of the attributes."
      },
      {
        "kind": "method",
        "name": "_updateFNA",
        "description": "Handler function for the input value changes.\nThis is done to be able to remove the event-listeners as a protection for multiple calls",
        "return": {
          "type": {
            "text": "(function(): void)|*"
          }
        },
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "_updateLabelsFromFat",
        "parameters": [
          {
            "name": "fatLabels"
          }
        ],
        "description": "labels are map <string,bool>, we handle every boolean attribute with the labels",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "_updateAttributesFromFat",
        "parameters": [
          {
            "name": "fatAttributes"
          }
        ],
        "description": "sync input attributes according to fat attributes",
        "privacy": "private"
      },
      {
        "kind": "field",
        "name": "accInfo",
        "description": "rewrite get accInfo function\ninitiate _inputAccInfo in order to avoid error",
        "privacy": "private",
        "return": {
          "type": {
            "text": "*"
          }
        }
      },
      {
        "kind": "field",
        "name": "valueStateMessage",
        "description": "overwrite to fix error",
        "privacy": "private",
        "return": {
          "type": {
            "text": "*|{}"
          }
        }
      },
      {
        "kind": "field",
        "name": "suggestionItems",
        "description": "overwrite to fix error",
        "privacy": "private",
        "return": {
          "type": {
            "text": "*|[]"
          }
        }
      },
      {
        "kind": "field",
        "name": "icon",
        "description": "overwrite to fix error",
        "privacy": "private",
        "return": {
          "type": {
            "text": "*|[]"
          }
        }
      },
      {
        "kind": "method",
        "name": "onFnaFieldValueChanged",
        "parameters": [
          {
            "name": "val"
          }
        ],
        "description": "overwrite onFnaFieldValueChanged",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "onFnaPlaceholderChanged",
        "parameters": [
          {
            "name": "placeholder"
          }
        ],
        "description": "overwrite onFnaPlaceholderChanged function",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "onFnaReadonlyChanged",
        "parameters": [
          {
            "name": "readonly"
          }
        ],
        "description": "overwrite onFnaReadonlyChanged function",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "onFnaOptionsChanged",
        "parameters": [
          {
            "name": "options"
          }
        ],
        "description": "overwrite onFnaOptionsChanged function",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "onFnaConstraintsChanged",
        "parameters": [
          {
            "name": "constraints"
          }
        ],
        "description": "overwrite onFnaConstraintsChanged function",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "onFnaFieldNodeBecameInvalid",
        "parameters": [
          {
            "name": "validity"
          }
        ],
        "description": "overwrite onFnaFieldNodeBecameInvalid function",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "onFnaFieldNodeBecameValid",
        "description": "overwrite onFnaFieldNodeBecameValid function",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "_setSuggestions",
        "parameters": [
          {
            "name": "arr"
          }
        ],
        "description": "set suggestions as the ui5-suggestion-item element\nui5 suggestions sample data: [{\"text\":\"Spain\",\"icon\":\"world\",\"type\":\"Active\",\"infoState\":\"None\",\"group\":false,\"key\":0},.. ]\nfuro.Fieldoption as suggestions: [{\"id\": 1,\"display_name\":\"show 1\"}, ..]\nif the suggestion item has icon , the ui5 icons should be imported in your ui component",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "_setValueStateMessage",
        "parameters": [
          {
            "name": "valueState"
          },
          {
            "name": "message"
          }
        ],
        "description": "update the value state and the value state message on demand",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "_resetValueStateMessage",
        "description": "reset to previous value state",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "_setIcon",
        "parameters": [
          {
            "name": "icon"
          }
        ],
        "description": "set ui5 icon",
        "privacy": "private"
      },
      {
        "kind": "field",
        "name": "type",
        "type": {
          "text": "string"
        },
        "default": "'Text'"
      },
      {
        "kind": "field",
        "name": "_previousValueState",
        "type": {
          "text": "object"
        },
        "default": "{ state: 'None', message: '' }"
      },
      {
        "kind": "field",
        "name": "_attributesFromFNA",
        "type": {
          "text": "object"
        },
        "default": "{\n      readonly: undefined,\n      placeholder: undefined,\n    }"
      },
      {
        "kind": "field",
        "name": "_constraintsFromFNA",
        "type": {
          "text": "object"
        },
        "default": "{\n      required: undefined,\n      max: undefined, // maps to maxlength\n    }"
      },
      {
        "kind": "field",
        "name": "_labelsFromFAT",
        "type": {
          "text": "object"
        },
        "default": "{\n      readonly: undefined,\n      disabled: undefined,\n      required: undefined,\n    }"
      },
      {
        "kind": "field",
        "name": "_attributesFromFAT",
        "type": {
          "text": "object"
        },
        "default": "{\n      placeholder: undefined,\n      max: undefined, // maps to maxlength\n      icon: undefined, // updates the icon\n    }"
      },
      {
        "kind": "field",
        "name": "_privilegedAttributes",
        "type": {
          "text": "object"
        },
        "default": "{\n      readonly: null,\n      placeholder: null,\n      required: null,\n      disabled: null,\n      icon: null,\n      maxlength: null,\n    }"
      }
    ],
    "events": [
      {
        "type": {
          "text": "`text`"
        },
        "description": " Fired when the input operation has finished by pressing Enter or on focusout.",
        "name": "change"
      },
      {
        "description": " Fired when the value of the ui5-input changes at each keystroke, and when a suggestion item has been selected.",
        "name": "input"
      },
      {
        "description": " All events from the [ui5 Input element](https://sap.github.io/ui5-webcomponents/playground/components/Input/).",
        "name": "xxxx"
      },
      {
        "type": {
          "text": "String"
        },
        "description": "Fires the field value when it changes.",
        "name": "value-changed"
      }
    ],
    "mixins": [
      {
        "name": "FieldNodeAdapter",
        "package": "@furo/data/src/lib/FieldNodeAdapter.js"
      }
    ],
    "superclass": {
      "module": "src/furo-ui5-text-input.js"
    },
    "summary": "data text input field",
    "tagName": "furo-ui5-text-input",
    "customElement": true
  },
  "component": "furo-ui5-text-input",
  "module": "components",
  "pkg": {
    "name": "@furo/ui5",
    "description": "SAP UI5 Web Components data bindings for furo",
    "version": "1.0.0-alpha.2",
    "homepage": "https://github.com/eclipse/eclipsefuro-web/tree/main/packages/furo-ui5",
    "repository": "git@github.com:eclipse/eclipsefuro-web.git",
    "author": {
      "name": "",
      "email": "",
      "url": ""
    },
    "keywords": [
      "web-components",
      "flow based programming",
      "flowbased",
      "flow"
    ],
    "license": "MIT",
    "main": "src/furo-catalog.js",
    "scripts": {
      "analyze": "cem analyze --globs \"src/**/*.js\" --exclude **/furo-catalog.js --litelement",
      "start": "web-dev-server --app-index demos --open",
      "lint": "eslint --ext .js,.html . --ignore-pattern 'hugo/*' --ignore-pattern 'docs/*' --ignore-path .gitignore && prettier \"**/*.js\" --check  --ignore-path .prettierignore",
      "format": "eslint --ext .js,.html . --fix --ignore-path .prettierignore && prettier \"**/*.js\" --write --ignore-path .prettierignore",
      "test": "web-test-runner  --coverage",
      "test:watch": "web-test-runner  --watch",
      "docs:start": "cd hugo && hugo serve",
      "docs:generate": "npm run analyze:components && npm run analyze:typerenderer && ./scripts/cem.sh",
      "docs:publish": "./scripts/publishDocs.sh",
      "analyze:components": "cem analyze --globs \"src/**/*.js\" --exclude **/typerenderer/* --litelement --outdir tmp/components",
      "analyze:typerenderer": "cem analyze --globs \"src/typerenderer/*.js\" --exclude --litelement --outdir tmp/typerenderer"
    },
    "peerDependencies": {
      "@furo/fbp": "^6.0.0-rc.0",
      "@furo/framework": "^2.0.0-rc.0",
      "@furo/layout": "^2.0.0-rc.0",
      "@furo/data": "^2.0.0-rc.0",
      "@furo/util": "^2.0.0-rc.0",
      "@ui5/webcomponents": "0.33.0",
      "@ui5/webcomponents-base": "0.33.0",
      "@ui5/webcomponents-fiori": "0.33.0",
      "@ui5/webcomponents-icons": "0.33.0",
      "lit": "^2.0.2"
    },
    "dependencies": {
      "markdown-it": "^9.0.1",
      "apexcharts": "^3.29.0",
      "signature_pad": "3.0.0-beta.4"
    },
    "devDependencies": {
      "@custom-elements-manifest/analyzer": "^0.5.3",
      "@open-wc/eslint-config": "^4.3.0",
      "@open-wc/testing": "next",
      "@web/dev-server": "^0.1.25",
      "@web/test-runner": "^0.13.20",
      "@esm-bundle/chai": "^4.3.4-fix.0",
      "eslint": "^7.32.0",
      "eslint-config-prettier": "^8.3.0",
      "husky": "^4.3.8",
      "lerna": "^3.22.1",
      "lint-staged": "^10.5.4",
      "lit-html": "2.0.0-rc.3",
      "prettier": "^2.4.1"
    },
    "publishConfig": {
      "access": "public"
    },
    "engines": {
      "node": ">=10.0"
    },
    "customElements": "tmp/typerenderer/custom-elements.json",
    "eslintConfig": {
      "extends": [
        "@open-wc",
        "prettier"
      ]
    },
    "prettier": {
      "singleQuote": true,
      "arrowParens": "avoid"
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged"
      }
    },
    "lint-staged": {
      "*.js": [
        "eslint --fix --ignore-pattern 'hugo/*' --ignore-pattern 'docs/*'",
        "prettier --write",
        "git add"
      ]
    }
  },
  "cem": {
    "kind": "javascript-module",
    "path": "src/furo-ui5-text-input.js",
    "declarations": [
      {
        "kind": "class",
        "description": "The 'furo-ui5-text-input' component allows the user to enter and edit texts with data binding.\n\nIt supports all features from the [SAP ui5 Input element](https://sap.github.io/ui5-webcomponents/playground/components/Input/).\n\nYou can bind any `string` type, like `furo.fat.String` type or the `google.protobuf.StringValue` type.\n\n```html\n <furo-ui5-text-input\n    Æ’-bind-data=\"--daoCountry(*.data.name)\"\n ></furo-ui5-text-input>\n```\n\n### Specificity\n1. Attributes which are set in the html source will have the highest specificity and will never get overwritten by metas or fat.\n2. Attributes set in meta will have the lowest specificity and will be overwritten by attributes from fat.\n\n** meta \t<  fat \t< html \t**\n\n## supported FAT attributes\n - **\"readonly\":\"true\"** set the element to readonly\n - **\"required\":\"true\"** set the element to required\n - **\"disabled\":\"true\"** set the element to disabled\n - **\"icon\":\"home\"** set the icon\n - **\"placeholder\":\"string\"** set the placeholder for the element\n - **\"max\":\"number\"** set the maximum number of characters available in the input field.\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n- **placeholder:\"some string\"** set the placeholder for the element\n- **max:\"number\"** set the maximum number of characters available in the input field.\n\nThe constraint **required** will mark the element as required\n\n## Methods\n**bind-data(fieldNode)**\nBind a entity field. You can use the entity even when no data was received.\n\nWhen you use @-object-ready from a furo-data-object which emits a EntityNode, just bind the field with --entity(*.fields.fieldname)",
        "name": "FuroUi5TextInput",
        "members": [
          {
            "kind": "field",
            "name": "nativeInputAttributes"
          },
          {
            "kind": "method",
            "name": "readAttributes",
            "description": "Reads the attributes which are set on the component dom.\nthose attributes can be set. `value-state`, `value-state-message`,  `icon`, `placeholder`, `required`,`readonly`,`disabled`\nUse this after manual or scripted update of the attributes."
          },
          {
            "kind": "method",
            "name": "_updateFNA",
            "description": "Handler function for the input value changes.\nThis is done to be able to remove the event-listeners as a protection for multiple calls",
            "return": {
              "type": {
                "text": "(function(): void)|*"
              }
            },
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "_updateLabelsFromFat",
            "parameters": [
              {
                "name": "fatLabels"
              }
            ],
            "description": "labels are map <string,bool>, we handle every boolean attribute with the labels",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "_updateAttributesFromFat",
            "parameters": [
              {
                "name": "fatAttributes"
              }
            ],
            "description": "sync input attributes according to fat attributes",
            "privacy": "private"
          },
          {
            "kind": "field",
            "name": "accInfo",
            "description": "rewrite get accInfo function\ninitiate _inputAccInfo in order to avoid error",
            "privacy": "private",
            "return": {
              "type": {
                "text": "*"
              }
            }
          },
          {
            "kind": "field",
            "name": "valueStateMessage",
            "description": "overwrite to fix error",
            "privacy": "private",
            "return": {
              "type": {
                "text": "*|{}"
              }
            }
          },
          {
            "kind": "field",
            "name": "suggestionItems",
            "description": "overwrite to fix error",
            "privacy": "private",
            "return": {
              "type": {
                "text": "*|[]"
              }
            }
          },
          {
            "kind": "field",
            "name": "icon",
            "description": "overwrite to fix error",
            "privacy": "private",
            "return": {
              "type": {
                "text": "*|[]"
              }
            }
          },
          {
            "kind": "method",
            "name": "onFnaFieldValueChanged",
            "parameters": [
              {
                "name": "val"
              }
            ],
            "description": "overwrite onFnaFieldValueChanged",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "onFnaPlaceholderChanged",
            "parameters": [
              {
                "name": "placeholder"
              }
            ],
            "description": "overwrite onFnaPlaceholderChanged function",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "onFnaReadonlyChanged",
            "parameters": [
              {
                "name": "readonly"
              }
            ],
            "description": "overwrite onFnaReadonlyChanged function",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "onFnaOptionsChanged",
            "parameters": [
              {
                "name": "options"
              }
            ],
            "description": "overwrite onFnaOptionsChanged function",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "onFnaConstraintsChanged",
            "parameters": [
              {
                "name": "constraints"
              }
            ],
            "description": "overwrite onFnaConstraintsChanged function",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "onFnaFieldNodeBecameInvalid",
            "parameters": [
              {
                "name": "validity"
              }
            ],
            "description": "overwrite onFnaFieldNodeBecameInvalid function",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "onFnaFieldNodeBecameValid",
            "description": "overwrite onFnaFieldNodeBecameValid function",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "_setSuggestions",
            "parameters": [
              {
                "name": "arr"
              }
            ],
            "description": "set suggestions as the ui5-suggestion-item element\nui5 suggestions sample data: [{\"text\":\"Spain\",\"icon\":\"world\",\"type\":\"Active\",\"infoState\":\"None\",\"group\":false,\"key\":0},.. ]\nfuro.Fieldoption as suggestions: [{\"id\": 1,\"display_name\":\"show 1\"}, ..]\nif the suggestion item has icon , the ui5 icons should be imported in your ui component",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "_setValueStateMessage",
            "parameters": [
              {
                "name": "valueState"
              },
              {
                "name": "message"
              }
            ],
            "description": "update the value state and the value state message on demand",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "_resetValueStateMessage",
            "description": "reset to previous value state",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "_setIcon",
            "parameters": [
              {
                "name": "icon"
              }
            ],
            "description": "set ui5 icon",
            "privacy": "private"
          },
          {
            "kind": "field",
            "name": "type",
            "type": {
              "text": "string"
            },
            "default": "'Text'"
          },
          {
            "kind": "field",
            "name": "_previousValueState",
            "type": {
              "text": "object"
            },
            "default": "{ state: 'None', message: '' }"
          },
          {
            "kind": "field",
            "name": "_attributesFromFNA",
            "type": {
              "text": "object"
            },
            "default": "{\n      readonly: undefined,\n      placeholder: undefined,\n    }"
          },
          {
            "kind": "field",
            "name": "_constraintsFromFNA",
            "type": {
              "text": "object"
            },
            "default": "{\n      required: undefined,\n      max: undefined, // maps to maxlength\n    }"
          },
          {
            "kind": "field",
            "name": "_labelsFromFAT",
            "type": {
              "text": "object"
            },
            "default": "{\n      readonly: undefined,\n      disabled: undefined,\n      required: undefined,\n    }"
          },
          {
            "kind": "field",
            "name": "_attributesFromFAT",
            "type": {
              "text": "object"
            },
            "default": "{\n      placeholder: undefined,\n      max: undefined, // maps to maxlength\n      icon: undefined, // updates the icon\n    }"
          },
          {
            "kind": "field",
            "name": "_privilegedAttributes",
            "type": {
              "text": "object"
            },
            "default": "{\n      readonly: null,\n      placeholder: null,\n      required: null,\n      disabled: null,\n      icon: null,\n      maxlength: null,\n    }"
          }
        ],
        "events": [
          {
            "type": {
              "text": "`text`"
            },
            "description": " Fired when the input operation has finished by pressing Enter or on focusout.",
            "name": "change"
          },
          {
            "description": " Fired when the value of the ui5-input changes at each keystroke, and when a suggestion item has been selected.",
            "name": "input"
          },
          {
            "description": " All events from the [ui5 Input element](https://sap.github.io/ui5-webcomponents/playground/components/Input/).",
            "name": "xxxx"
          },
          {
            "type": {
              "text": "String"
            },
            "description": "Fires the field value when it changes.",
            "name": "value-changed"
          }
        ],
        "mixins": [
          {
            "name": "FieldNodeAdapter",
            "package": "@furo/data/src/lib/FieldNodeAdapter.js"
          }
        ],
        "superclass": {
          "module": "src/furo-ui5-text-input.js"
        },
        "summary": "data text input field",
        "tagName": "furo-ui5-text-input",
        "customElement": true
      }
    ],
    "exports": [
      {
        "kind": "js",
        "name": "FuroUi5TextInput",
        "declaration": {
          "name": "FuroUi5TextInput",
          "module": "src/furo-ui5-text-input.js"
        }
      },
      {
        "kind": "custom-element-definition",
        "name": "furo-ui5-text-input",
        "declaration": {
          "name": "FuroUi5TextInput",
          "module": "src/furo-ui5-text-input.js"
        }
      }
    ]
  }
}
