{
  "decl": {
    "kind": "class",
    "description": "`furo-ui5-collection-dropdown-labeled`\nThe furo-ui5-collection-dropdown-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
    "name": "FuroUi5CollectionDropdownLabeled",
    "members": [
      {
        "kind": "method",
        "name": "_FBPReady",
        "description": "flow is ready lifecycle method",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "bindData",
        "parameters": [
          {
            "name": "fieldNode",
            "type": {
              "text": "FieldNode"
            }
          }
        ],
        "description": "Orchestrates the data field connection to the inside"
      },
      {
        "kind": "method",
        "name": "injectEntities",
        "parameters": [
          {
            "name": "entities"
          }
        ],
        "description": "Inject the array of a collection"
      },
      {
        "kind": "field",
        "name": "label",
        "type": {
          "text": "string"
        },
        "default": "''",
        "privacy": "public",
        "description": "the label for the data-collection-dropdown",
        "attribute": "label"
      },
      {
        "kind": "field",
        "name": "subField",
        "type": {
          "text": "string"
        },
        "default": "'data'",
        "privacy": "public",
        "description": "If you inject an array with complex objects, declare here the path where display_name and value_field are located.\n\nThis is only needed if display_name and value_field are not located in the root of the object.",
        "attribute": "sub-field",
        "reflects": true
      },
      {
        "kind": "field",
        "name": "displayField",
        "type": {
          "text": "string"
        },
        "default": "'display_name'",
        "privacy": "public",
        "description": "The name of the field from the injected collection that contains the label for the dropdown array.",
        "attribute": "display-field",
        "reflects": true
      },
      {
        "kind": "field",
        "name": "valueField",
        "type": {
          "text": "string"
        },
        "default": "'id'",
        "privacy": "public",
        "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\nIf you bind a scalar, you dont need this attribute.",
        "attribute": "value-field",
        "reflects": true
      },
      {
        "kind": "field",
        "name": "valueSubField",
        "type": {
          "text": "null"
        },
        "default": "null",
        "privacy": "public",
        "description": "if you bind a complex type, declare here the field which gets updated of value by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
        "attribute": "value-sub-field",
        "reflects": true
      },
      {
        "kind": "field",
        "name": "displaySubField",
        "type": {
          "text": "string"
        },
        "default": "'display_name'",
        "privacy": "public",
        "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
        "attribute": "display-sub-field",
        "reflects": true
      },
      {
        "kind": "field",
        "name": "autoSelectFirst",
        "type": {
          "text": "boolean"
        },
        "default": "false",
        "privacy": "public",
        "description": "set this attribute to autoSelectFirst the first item in the list, if no item is set in the bounded fieldNode",
        "attribute": "auto-select-first",
        "reflects": true
      },
      {
        "kind": "field",
        "name": "disabled",
        "privacy": "public",
        "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
        "attribute": "disabled"
      },
      {
        "kind": "field",
        "name": "required",
        "privacy": "public",
        "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
        "attribute": "required"
      }
    ],
    "events": [
      {
        "type": {
          "text": "{*} the value from the value-field. By default the value field is \"id\""
        },
        "description": " Fired when value has changed from the component inside. **bubbles**",
        "name": "value-changed"
      }
    ],
    "attributes": [
      {
        "name": "label",
        "description": "the label for the data-collection-dropdown",
        "fieldName": "label"
      },
      {
        "name": "disabled",
        "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
        "fieldName": "disabled"
      },
      {
        "name": "required",
        "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
        "fieldName": "required"
      },
      {
        "name": "sub-field",
        "description": "If you inject an array with complex objects, declare here the path where display_name and value_field are located.\n\nThis is only needed if display_name and value_field are not located in the root of the object.",
        "fieldName": "subField"
      },
      {
        "name": "display-field",
        "description": "The name of the field from the injected collection that contains the label for the dropdown array.",
        "fieldName": "displayField"
      },
      {
        "name": "value-field",
        "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\nIf you bind a scalar, you dont need this attribute.",
        "fieldName": "valueField"
      },
      {
        "name": "value-sub-field",
        "description": "if you bind a complex type, declare here the field which gets updated of value by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
        "fieldName": "valueSubField"
      },
      {
        "name": "display-sub-field",
        "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
        "fieldName": "displaySubField"
      },
      {
        "name": "auto-select-first",
        "description": "set this attribute to autoSelectFirst the first item in the list, if no item is set in the bounded fieldNode",
        "type": {
          "text": "boolean"
        },
        "fieldName": "autoSelectFirst"
      }
    ],
    "mixins": [
      {
        "name": "FBP",
        "package": "@furo/fbp/src/fbp.js"
      }
    ],
    "superclass": {
      "name": "LitElement",
      "package": "lit"
    },
    "summary": "labeled input field",
    "tagName": "furo-ui5-collection-dropdown-labeled",
    "customElement": true
  },
  "component": "furo-ui5-collection-dropdown-labeled",
  "module": "components",
  "pkg": {
    "name": "@furo/ui5",
    "description": "SAP UI5 Web Components data bindings for furo",
    "version": "1.0.0-alpha.2",
    "homepage": "https://github.com/eclipse/eclipsefuro-web/tree/main/packages/furo-ui5",
    "repository": "git@github.com:eclipse/eclipsefuro-web.git",
    "author": {
      "name": "",
      "email": "",
      "url": ""
    },
    "keywords": [
      "web-components",
      "flow based programming",
      "flowbased",
      "flow"
    ],
    "license": "MIT",
    "main": "src/furo-catalog.js",
    "scripts": {
      "analyze": "cem analyze --globs \"src/**/*.js\" --exclude **/furo-catalog.js --litelement",
      "start": "web-dev-server --app-index demos --open",
      "lint": "eslint --ext .js,.html . --ignore-pattern 'hugo/*' --ignore-pattern 'docs/*' --ignore-path .gitignore && prettier \"**/*.js\" --check  --ignore-path .prettierignore",
      "format": "eslint --ext .js,.html . --fix --ignore-path .prettierignore && prettier \"**/*.js\" --write --ignore-path .prettierignore",
      "test": "web-test-runner  --coverage",
      "test:watch": "web-test-runner  --watch",
      "docs:start": "cd hugo && hugo serve",
      "docs:generate": "npm run analyze:components && npm run analyze:typerenderer && ./scripts/cem.sh",
      "docs:publish": "./scripts/publishDocs.sh",
      "analyze:components": "cem analyze --globs \"src/**/*.js\" --exclude **/typerenderer/* --litelement --outdir tmp/components",
      "analyze:typerenderer": "cem analyze --globs \"src/typerenderer/*.js\" --exclude --litelement --outdir tmp/typerenderer"
    },
    "peerDependencies": {
      "@furo/fbp": "^6.0.0-rc.0",
      "@furo/framework": "^2.0.0-rc.0",
      "@furo/layout": "^2.0.0-rc.0",
      "@furo/data": "^2.0.0-rc.0",
      "@furo/util": "^2.0.0-rc.0",
      "@ui5/webcomponents": "0.33.0",
      "@ui5/webcomponents-base": "0.33.0",
      "@ui5/webcomponents-fiori": "0.33.0",
      "@ui5/webcomponents-icons": "0.33.0",
      "lit": "^2.0.2"
    },
    "dependencies": {
      "markdown-it": "^9.0.1",
      "apexcharts": "^3.29.0",
      "signature_pad": "3.0.0-beta.4"
    },
    "devDependencies": {
      "@custom-elements-manifest/analyzer": "^0.5.3",
      "@open-wc/eslint-config": "^4.3.0",
      "@open-wc/testing": "next",
      "@web/dev-server": "^0.1.25",
      "@web/test-runner": "^0.13.20",
      "@esm-bundle/chai": "^4.3.4-fix.0",
      "eslint": "^7.32.0",
      "eslint-config-prettier": "^8.3.0",
      "husky": "^4.3.8",
      "lerna": "^3.22.1",
      "lint-staged": "^10.5.4",
      "lit-html": "2.0.0-rc.3",
      "prettier": "^2.4.1"
    },
    "publishConfig": {
      "access": "public"
    },
    "engines": {
      "node": ">=10.0"
    },
    "customElements": "tmp/typerenderer/custom-elements.json",
    "eslintConfig": {
      "extends": [
        "@open-wc",
        "prettier"
      ]
    },
    "prettier": {
      "singleQuote": true,
      "arrowParens": "avoid"
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged"
      }
    },
    "lint-staged": {
      "*.js": [
        "eslint --fix --ignore-pattern 'hugo/*' --ignore-pattern 'docs/*'",
        "prettier --write",
        "git add"
      ]
    }
  },
  "cem": {
    "kind": "javascript-module",
    "path": "src/furo-ui5-collection-dropdown-labeled.js",
    "declarations": [
      {
        "kind": "class",
        "description": "`furo-ui5-collection-dropdown-labeled`\nThe furo-ui5-collection-dropdown-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
        "name": "FuroUi5CollectionDropdownLabeled",
        "members": [
          {
            "kind": "method",
            "name": "_FBPReady",
            "description": "flow is ready lifecycle method",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "bindData",
            "parameters": [
              {
                "name": "fieldNode",
                "type": {
                  "text": "FieldNode"
                }
              }
            ],
            "description": "Orchestrates the data field connection to the inside"
          },
          {
            "kind": "method",
            "name": "injectEntities",
            "parameters": [
              {
                "name": "entities"
              }
            ],
            "description": "Inject the array of a collection"
          },
          {
            "kind": "field",
            "name": "label",
            "type": {
              "text": "string"
            },
            "default": "''",
            "privacy": "public",
            "description": "the label for the data-collection-dropdown",
            "attribute": "label"
          },
          {
            "kind": "field",
            "name": "subField",
            "type": {
              "text": "string"
            },
            "default": "'data'",
            "privacy": "public",
            "description": "If you inject an array with complex objects, declare here the path where display_name and value_field are located.\n\nThis is only needed if display_name and value_field are not located in the root of the object.",
            "attribute": "sub-field",
            "reflects": true
          },
          {
            "kind": "field",
            "name": "displayField",
            "type": {
              "text": "string"
            },
            "default": "'display_name'",
            "privacy": "public",
            "description": "The name of the field from the injected collection that contains the label for the dropdown array.",
            "attribute": "display-field",
            "reflects": true
          },
          {
            "kind": "field",
            "name": "valueField",
            "type": {
              "text": "string"
            },
            "default": "'id'",
            "privacy": "public",
            "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\nIf you bind a scalar, you dont need this attribute.",
            "attribute": "value-field",
            "reflects": true
          },
          {
            "kind": "field",
            "name": "valueSubField",
            "type": {
              "text": "null"
            },
            "default": "null",
            "privacy": "public",
            "description": "if you bind a complex type, declare here the field which gets updated of value by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
            "attribute": "value-sub-field",
            "reflects": true
          },
          {
            "kind": "field",
            "name": "displaySubField",
            "type": {
              "text": "string"
            },
            "default": "'display_name'",
            "privacy": "public",
            "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
            "attribute": "display-sub-field",
            "reflects": true
          },
          {
            "kind": "field",
            "name": "autoSelectFirst",
            "type": {
              "text": "boolean"
            },
            "default": "false",
            "privacy": "public",
            "description": "set this attribute to autoSelectFirst the first item in the list, if no item is set in the bounded fieldNode",
            "attribute": "auto-select-first",
            "reflects": true
          },
          {
            "kind": "field",
            "name": "disabled",
            "privacy": "public",
            "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
            "attribute": "disabled"
          },
          {
            "kind": "field",
            "name": "required",
            "privacy": "public",
            "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
            "attribute": "required"
          }
        ],
        "events": [
          {
            "type": {
              "text": "{*} the value from the value-field. By default the value field is \"id\""
            },
            "description": " Fired when value has changed from the component inside. **bubbles**",
            "name": "value-changed"
          }
        ],
        "attributes": [
          {
            "name": "label",
            "description": "the label for the data-collection-dropdown",
            "fieldName": "label"
          },
          {
            "name": "disabled",
            "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
            "fieldName": "disabled"
          },
          {
            "name": "required",
            "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
            "fieldName": "required"
          },
          {
            "name": "sub-field",
            "description": "If you inject an array with complex objects, declare here the path where display_name and value_field are located.\n\nThis is only needed if display_name and value_field are not located in the root of the object.",
            "fieldName": "subField"
          },
          {
            "name": "display-field",
            "description": "The name of the field from the injected collection that contains the label for the dropdown array.",
            "fieldName": "displayField"
          },
          {
            "name": "value-field",
            "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\nIf you bind a scalar, you dont need this attribute.",
            "fieldName": "valueField"
          },
          {
            "name": "value-sub-field",
            "description": "if you bind a complex type, declare here the field which gets updated of value by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
            "fieldName": "valueSubField"
          },
          {
            "name": "display-sub-field",
            "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
            "fieldName": "displaySubField"
          },
          {
            "name": "auto-select-first",
            "description": "set this attribute to autoSelectFirst the first item in the list, if no item is set in the bounded fieldNode",
            "type": {
              "text": "boolean"
            },
            "fieldName": "autoSelectFirst"
          }
        ],
        "mixins": [
          {
            "name": "FBP",
            "package": "@furo/fbp/src/fbp.js"
          }
        ],
        "superclass": {
          "name": "LitElement",
          "package": "lit"
        },
        "summary": "labeled input field",
        "tagName": "furo-ui5-collection-dropdown-labeled",
        "customElement": true
      }
    ],
    "exports": [
      {
        "kind": "js",
        "name": "FuroUi5CollectionDropdownLabeled",
        "declaration": {
          "name": "FuroUi5CollectionDropdownLabeled",
          "module": "src/furo-ui5-collection-dropdown-labeled.js"
        }
      },
      {
        "kind": "custom-element-definition",
        "name": "furo-ui5-collection-dropdown-labeled",
        "declaration": {
          "name": "FuroUi5CollectionDropdownLabeled",
          "module": "src/furo-ui5-collection-dropdown-labeled.js"
        }
      }
    ]
  }
}
