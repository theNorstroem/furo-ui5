{
  "decl": {
    "kind": "class",
    "description": "The 'furo-ui5-checkbox-input' component allows the user to switch true and false for Bool with data binding.\n\nIt supports all features from the [SAP ui5 checkbox element](https://sap.github.io/ui5-webcomponents/playground/components/CheckBox/).\n\nYou can bind  `bool` type, `furo.fat.Bool` type or the `google.wrapper.BoolValue`  type.\n\n```html\n <furo-ui5-checkbox-input\n    Æ’-bind-data=\"--daoCountry(*.data.classified_as_risk_area)\"\n ></furo-ui5-checkbox-input>\n```\n\n### Specificity\n1. Attributes which are set in the html source will have the highest specificity and will never get overwritten by metas or fat.\n2. Attributes set in meta will have the lowest specificity and will be overwritten by attributes from fat.\n\n| meta \t| fat \t| html \t|\n|------\t|-----\t|------\t|\n| 1    \t| 10  \t| 100  \t|\n\n\n## supported FAT attributes\n - **\"readonly\":\"true\"** set the element to readonly\n - **\"disabled\":\"true\"** set the element to disabled\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n\nThe constraint **required** will mark the element as required\n\n```",
    "name": "FuroUi5CheckboxInput",
    "members": [
      {
        "kind": "method",
        "name": "readAttributes",
        "description": "Reads the attributes which are set on the component dom.",
        "privacy": "public"
      },
      {
        "kind": "method",
        "name": "_updateFNA",
        "description": "Handler function for the checkbox changes.",
        "return": {
          "type": {
            "text": "(function(): void)|*"
          }
        },
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "onFnaFieldValueChanged",
        "parameters": [
          {
            "name": "val"
          }
        ],
        "description": "overwrite onFnaFieldValueChanged",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "_updateLabelsFromFat",
        "parameters": [
          {
            "name": "fatLabels"
          }
        ],
        "description": "labels are map <string,bool>, we handle every boolean attribute with the labels",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "_updateAttributesFromFat",
        "parameters": [
          {
            "name": "fatAttributes"
          }
        ],
        "description": "sync input attributes according to fat attributes",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "onFnaFieldNodeBecameInvalid",
        "description": "overwrite onFnaFieldNodeBecameInvalid function",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "onFnaFieldNodeBecameValid",
        "description": "overwrite onFnaFieldNodeBecameValid function",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "_setValueState",
        "parameters": [
          {
            "name": "valueState"
          }
        ],
        "description": "Updates the valueState\nui5 checkbox has only 3 states: Warning, Error, and None (default) https://sap.github.io/ui5-webcomponents/playground/components/CheckBox/",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "_resetValueState",
        "description": "reset to previous value state",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "onFnaLabelChanged",
        "parameters": [
          {
            "name": "text"
          },
          {
            "name": "placeholder",
            "type": {
              "text": "String"
            }
          }
        ],
        "description": "overwrite onFnaLabelChanged function\nlabel is mapped to text",
        "privacy": "private"
      },
      {
        "kind": "method",
        "name": "onFnaReadonlyChanged",
        "parameters": [
          {
            "name": "readonly",
            "type": {
              "text": "Boolean"
            }
          }
        ],
        "description": "overwrite onFnaReadonlyChanged function",
        "privacy": "private"
      },
      {
        "kind": "field",
        "name": "_previousValueState",
        "type": {
          "text": "string"
        },
        "description": "used to restore the state after a invalidation -> validation change",
        "privacy": "private",
        "default": "'None'"
      },
      {
        "kind": "field",
        "name": "_attributesFromFNA",
        "type": {
          "text": "{readonly: undefined, disabled: undefined, label: undefined}"
        },
        "privacy": "private",
        "default": "{\n      readonly: undefined,\n      disabled: undefined,\n      label: undefined,\n    }"
      },
      {
        "kind": "field",
        "name": "_constraintsFromFNA",
        "type": {
          "text": "{}"
        },
        "privacy": "private",
        "default": "{}"
      },
      {
        "kind": "field",
        "name": "_attributesFromFAT",
        "type": {
          "text": "{label: undefined}"
        },
        "privacy": "private",
        "default": "{\n      label: undefined,\n    }"
      },
      {
        "kind": "field",
        "name": "_labelsFromFAT",
        "type": {
          "text": "{readonly: undefined, disabled: undefined}"
        },
        "privacy": "private",
        "default": "{\n      readonly: undefined,\n      disabled: undefined,\n    }"
      },
      {
        "kind": "field",
        "name": "_privilegedAttributes",
        "type": {
          "text": "{readonly: null, disabled: null, text: null}"
        },
        "description": "a list of privileged attributes. when those attributes are set in number-input components initially.\nthey can not be modified later via response or spec\nnull is used because getAttribute returns null or value",
        "privacy": "private",
        "default": "{\n      readonly: null,\n      disabled: null,\n      text: null,\n      indeterminate: null,\n      checked: null,\n    }"
      }
    ],
    "mixins": [
      {
        "name": "FieldNodeAdapter",
        "package": "@furo/data/src/lib/FieldNodeAdapter.js"
      }
    ],
    "superclass": {
      "module": "src/furo-ui5-checkbox-input.js"
    },
    "summary": "data checkbox input field",
    "tagName": "furo-ui5-checkbox-input",
    "customElement": true
  },
  "component": "furo-ui5-checkbox-input",
  "module": "components",
  "pkg": {
    "name": "@furo/ui5",
    "description": "SAP UI5 Web Components data bindings for furo",
    "version": "1.0.0-rc.3",
    "homepage": "https://github.com/eclipse/eclipsefuro-web/tree/main/packages/furo-ui5",
    "repository": "git@github.com:eclipse/eclipsefuro-web.git",
    "author": {
      "name": "",
      "email": "",
      "url": ""
    },
    "keywords": [
      "web-components",
      "flow based programming",
      "flowbased",
      "flow"
    ],
    "license": "MIT",
    "main": "src/furo-catalog.js",
    "scripts": {
      "analyze": "cem analyze --globs \"src/**/*.js\" --exclude **/furo-catalog.js --litelement",
      "start": "web-dev-server --app-index demos --open",
      "lint": "eslint --ext .js,.html . --ignore-pattern 'hugo/*' --ignore-pattern 'docs/*' --ignore-path .gitignore && prettier \"**/*.js\" --check  --ignore-path .prettierignore",
      "format": "eslint --ext .js,.html . --fix --ignore-path .prettierignore && prettier \"**/*.js\" --write --ignore-path .prettierignore",
      "test": "web-test-runner  --coverage",
      "test:watch": "web-test-runner  --watch",
      "docs:start": "cd hugo && hugo serve",
      "docs:generate": "npm run analyze:components && npm run analyze:typerenderer && ./scripts/cem.sh",
      "docs:publish": "./scripts/publishDocs.sh",
      "analyze:components": "cem analyze --globs \"src/**/*.js\" --exclude **/typerenderer/* --litelement --outdir tmp/components",
      "analyze:typerenderer": "cem analyze --globs \"src/typerenderer/*.js\" --exclude --litelement --outdir tmp/typerenderer"
    },
    "peerDependencies": {
      "@furo/fbp": "^6.0.0-rc.3",
      "@furo/framework": "^2.0.0-rc.3",
      "@furo/layout": "^2.0.0-rc.4",
      "@furo/data": "^2.0.0-rc.3",
      "@furo/util": "^2.0.0-rc.4",
      "@ui5/webcomponents": "^1.0.1",
      "@ui5/webcomponents-base": "^1.0.1",
      "@ui5/webcomponents-fiori": "^1.0.1",
      "@ui5/webcomponents-icons": "^1.0.1",
      "lit": "^2.0.1"
    },
    "dependencies": {
      "markdown-it": "^9.0.1",
      "apexcharts": "^3.29.0",
      "signature_pad": "3.0.0-beta.4"
    },
    "devDependencies": {
      "@furo/route": "^2.0.0-rc.3",
      "lit-html": "2.0.1",
      "@custom-elements-manifest/analyzer": "^0.5.7",
      "@open-wc/eslint-config": "^7.0.0",
      "@open-wc/testing": "^3.0.3",
      "@web/dev-server": "^0.1.28",
      "@web/test-runner": "^0.13.21",
      "@esm-bundle/chai": "^4.3.4-fix.0",
      "eslint": "^8.2.0",
      "eslint-config-prettier": "^8.3.0",
      "husky": "^7.0.4",
      "lerna": "^4.0.0",
      "lint-staged": "^11.2.6",
      "prettier": "^2.4.1"
    },
    "publishConfig": {
      "access": "public"
    },
    "engines": {
      "node": ">=10.0"
    },
    "customElements": "tmp/typerenderer/custom-elements.json",
    "eslintConfig": {
      "extends": [
        "@open-wc",
        "prettier"
      ]
    },
    "prettier": {
      "singleQuote": true,
      "arrowParens": "avoid"
    },
    "husky": {
      "hooks": {
        "pre-commit": "lint-staged"
      }
    },
    "lint-staged": {
      "*.js": [
        "eslint --fix --ignore-pattern 'hugo/*' --ignore-pattern 'docs/*' --ignore-pattern 'test--/*'",
        "prettier --write",
        "git add"
      ]
    }
  },
  "cem": {
    "kind": "javascript-module",
    "path": "src/furo-ui5-checkbox-input.js",
    "declarations": [
      {
        "kind": "class",
        "description": "The 'furo-ui5-checkbox-input' component allows the user to switch true and false for Bool with data binding.\n\nIt supports all features from the [SAP ui5 checkbox element](https://sap.github.io/ui5-webcomponents/playground/components/CheckBox/).\n\nYou can bind  `bool` type, `furo.fat.Bool` type or the `google.wrapper.BoolValue`  type.\n\n```html\n <furo-ui5-checkbox-input\n    Æ’-bind-data=\"--daoCountry(*.data.classified_as_risk_area)\"\n ></furo-ui5-checkbox-input>\n```\n\n### Specificity\n1. Attributes which are set in the html source will have the highest specificity and will never get overwritten by metas or fat.\n2. Attributes set in meta will have the lowest specificity and will be overwritten by attributes from fat.\n\n| meta \t| fat \t| html \t|\n|------\t|-----\t|------\t|\n| 1    \t| 10  \t| 100  \t|\n\n\n## supported FAT attributes\n - **\"readonly\":\"true\"** set the element to readonly\n - **\"disabled\":\"true\"** set the element to disabled\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n\nThe constraint **required** will mark the element as required\n\n```",
        "name": "FuroUi5CheckboxInput",
        "members": [
          {
            "kind": "method",
            "name": "readAttributes",
            "description": "Reads the attributes which are set on the component dom.",
            "privacy": "public"
          },
          {
            "kind": "method",
            "name": "_updateFNA",
            "description": "Handler function for the checkbox changes.",
            "return": {
              "type": {
                "text": "(function(): void)|*"
              }
            },
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "onFnaFieldValueChanged",
            "parameters": [
              {
                "name": "val"
              }
            ],
            "description": "overwrite onFnaFieldValueChanged",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "_updateLabelsFromFat",
            "parameters": [
              {
                "name": "fatLabels"
              }
            ],
            "description": "labels are map <string,bool>, we handle every boolean attribute with the labels",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "_updateAttributesFromFat",
            "parameters": [
              {
                "name": "fatAttributes"
              }
            ],
            "description": "sync input attributes according to fat attributes",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "onFnaFieldNodeBecameInvalid",
            "description": "overwrite onFnaFieldNodeBecameInvalid function",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "onFnaFieldNodeBecameValid",
            "description": "overwrite onFnaFieldNodeBecameValid function",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "_setValueState",
            "parameters": [
              {
                "name": "valueState"
              }
            ],
            "description": "Updates the valueState\nui5 checkbox has only 3 states: Warning, Error, and None (default) https://sap.github.io/ui5-webcomponents/playground/components/CheckBox/",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "_resetValueState",
            "description": "reset to previous value state",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "onFnaLabelChanged",
            "parameters": [
              {
                "name": "text"
              },
              {
                "name": "placeholder",
                "type": {
                  "text": "String"
                }
              }
            ],
            "description": "overwrite onFnaLabelChanged function\nlabel is mapped to text",
            "privacy": "private"
          },
          {
            "kind": "method",
            "name": "onFnaReadonlyChanged",
            "parameters": [
              {
                "name": "readonly",
                "type": {
                  "text": "Boolean"
                }
              }
            ],
            "description": "overwrite onFnaReadonlyChanged function",
            "privacy": "private"
          },
          {
            "kind": "field",
            "name": "_previousValueState",
            "type": {
              "text": "string"
            },
            "description": "used to restore the state after a invalidation -> validation change",
            "privacy": "private",
            "default": "'None'"
          },
          {
            "kind": "field",
            "name": "_attributesFromFNA",
            "type": {
              "text": "{readonly: undefined, disabled: undefined, label: undefined}"
            },
            "privacy": "private",
            "default": "{\n      readonly: undefined,\n      disabled: undefined,\n      label: undefined,\n    }"
          },
          {
            "kind": "field",
            "name": "_constraintsFromFNA",
            "type": {
              "text": "{}"
            },
            "privacy": "private",
            "default": "{}"
          },
          {
            "kind": "field",
            "name": "_attributesFromFAT",
            "type": {
              "text": "{label: undefined}"
            },
            "privacy": "private",
            "default": "{\n      label: undefined,\n    }"
          },
          {
            "kind": "field",
            "name": "_labelsFromFAT",
            "type": {
              "text": "{readonly: undefined, disabled: undefined}"
            },
            "privacy": "private",
            "default": "{\n      readonly: undefined,\n      disabled: undefined,\n    }"
          },
          {
            "kind": "field",
            "name": "_privilegedAttributes",
            "type": {
              "text": "{readonly: null, disabled: null, text: null}"
            },
            "description": "a list of privileged attributes. when those attributes are set in number-input components initially.\nthey can not be modified later via response or spec\nnull is used because getAttribute returns null or value",
            "privacy": "private",
            "default": "{\n      readonly: null,\n      disabled: null,\n      text: null,\n      indeterminate: null,\n      checked: null,\n    }"
          }
        ],
        "mixins": [
          {
            "name": "FieldNodeAdapter",
            "package": "@furo/data/src/lib/FieldNodeAdapter.js"
          }
        ],
        "superclass": {
          "module": "src/furo-ui5-checkbox-input.js"
        },
        "summary": "data checkbox input field",
        "tagName": "furo-ui5-checkbox-input",
        "customElement": true
      }
    ],
    "exports": [
      {
        "kind": "js",
        "name": "FuroUi5CheckboxInput",
        "declaration": {
          "name": "FuroUi5CheckboxInput",
          "module": "src/furo-ui5-checkbox-input.js"
        }
      },
      {
        "kind": "custom-element-definition",
        "name": "furo-ui5-checkbox-input",
        "declaration": {
          "name": "FuroUi5CheckboxInput",
          "module": "src/furo-ui5-checkbox-input.js"
        }
      }
    ]
  }
}
