{
  "kind": "class",
  "description": "`display-google-protobuf-any`\nThe display-google-protobuf-any component is a wrapper displays of type `google.protobuf.Any` in read only mode.\n\nEvery display-xxx component should implement the following API:\n- function: bindData(fieldNode){...}",
  "name": "DisplayGoolgeProtobufAny",
  "members": [
    {
      "kind": "method",
      "name": "bindData",
      "parameters": [
        {
          "name": "fieldNode",
          "type": {
            "text": "FieldNode"
          }
        }
      ],
      "description": "Binds a field node to the component\nthe display-google-protobuf-any is a simple proxy element to show\nthe initial state if no data is available."
    },
    {
      "kind": "method",
      "name": "_waitForType",
      "parameters": [
        {
          "name": "field"
        }
      ],
      "description": "google.protobuf.Any wait for @type information\nregisters event listener and creates the component as soon as the @type information is available.",
      "privacy": "private"
    },
    {
      "kind": "method",
      "name": "_createContreteType",
      "description": "Creates the concrete type specific renderer",
      "privacy": "private"
    },
    {
      "kind": "method",
      "name": "_warning",
      "description": "warns if diynamic component is not imported",
      "privacy": "private"
    },
    {
      "kind": "field",
      "name": "_typeResolved",
      "type": {
        "text": "boolean"
      },
      "default": "false"
    }
  ],
  "superclass": {
    "name": "LitElement",
    "package": "lit"
  },
  "tagName": "display-google-protobuf-any",
  "customElement": true
}
