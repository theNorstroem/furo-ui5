// Code generated by @furo/ui-builder. DO NOT EDIT.
import { LitElement, html, css } from 'lit';
import { FBP } from '@furo/fbp/src/fbp.js';

// eslint-disable-next-line no-unused-vars
import { i18n } from '@furo/framework/src/i18n.js';

import '@furo/data/src/furo-deep-link.js';
import '@furo/data/src/furo-collection-agent.js';
import '@furo/data/src/furo-data-object.js';
import '@furo/ui5/src/furo-ui5-table.js';
import '@furo/ui5/src/furo-ui5-pagination-bar.js';
import '@furo/ui5/src/furo-ui5-busy-indicator.js';
import '@furo/ui5/src/furo-ui5-message-strip-display.js';
import '@furo/ui5/src/furo-ui5-message-strip.js';
import '@furo/ui5/src/furo-ui5-section.js'
import '@furo/ui5/src/furo-ui5-subsection.js'

/**
 * `{{.Var.SearchResultsComponentName}}`
 * This file will fetch the data and displays the reults table
 *
 * @fires escape-pressed Fired when the ESCAPE key was pressed while the search field has the focus.
 * @fires search-hts-updated {HTS} Fired when the agent receives new HTS data from the server.
 * @summary Displays the search results
 * @customElement {{.Var.SearchResultsComponentName}}
 * @appliesMixin FBP
 */
export class {{.Var.SearchResultsClassName}} extends FBP(LitElement) {

  constructor() {
    super();
  /**
     * Debounce function, taken from Underscore.js
     * @param func
     * @param wait
     * @param immediate
     * @return {(function(): void)|*}
   * @private
   */
    this._debounce = function debounce(func, wait, immediate) {
      let timeout;
      return function debouncer() {
        const context = this;
        // eslint-disable-next-line prefer-rest-params
        const args = arguments;
        const later = function applyLater() {
          timeout = null;
          if (!immediate) func.apply(context, args);
        };
        const callNow = immediate && !timeout;
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
        if (callNow) func.apply(context, args);
    };
    };

    this._debounceUnlock = this._debounce(this._unlock, 1000)
  }

  /**
   * flow is ready lifecycle method
   */
  _FBPReady() {
    super._FBPReady();


    let lastKnownScrollPosition = 0;
    let ticking = false;

    this.scroller = this.shadowRoot.querySelector('furo-ui5-busy-indicator');
    this._scrollLock = false

    this.scroller.addEventListener('wheel', (e) => {
      lastKnownScrollPosition = this.scroller.scrollTop;
      if (!ticking) {
        window.requestAnimationFrame(() => {
          this._wheelHandler(lastKnownScrollPosition, e);
          ticking = false;
        });
        ticking = true;
      }
    });


    // this._FBPTraceWires();
    /**
     * Register hook on wire --nextPageLoaded to delay the focus
     *
     */
    this._FBPAddWireHook('--nextPageLoaded', () => {
      this._lockScrollHandler();
      setTimeout(() => {
        this._FBPTriggerWire('|--nextPageLoaded', null);
      }, 16);
    });

    /**
     * Register hook on wire --lastPageLoaded to delay the focus
     *
     */
    this._FBPAddWireHook('--lastPageLoaded', () => {
      this._lockScrollHandler();
      setTimeout(() => {
        this._FBPTriggerWire('|--lastPageLoaded', null);
      }, 16);
    });

    /**
     * Register hook on wire --nextPageLoaded to delay the focus
     *
     */
    this._FBPAddWireHook('--prevPageLoaded', () => {
      setTimeout(() => {
        this._lockScrollHandler();
        // long wires are not supported by fbp yet, so we do the same
        this._FBPTriggerWire('|--prevPageLoaded', null);
      }, 16);
    });
    /**
     * Register hook on wire --nextPageLoaded to delay the focus
     *
     */
    this._FBPAddWireHook('--firstPageLoaded', () => {
      setTimeout(() => {
        this._lockScrollHandler();
        // long wires are not supported by fbp yet, so we do the same
        this._FBPTriggerWire('|--firstPageLoaded', null);
      }, 16);
    });

    /**
     * Register hook on wire --collectionResponse to
     * set the _noresult value based on the number of entities
     */
    this._FBPAddWireHook('--collectionResponse', e => {
      this._lockScrollHandler();
      const noresult = !(e.entities && e.entities.length > 0);
      if (noresult) {
        /**
         * @event no-results
         * Fired when a collection does not have any entity
         *
         * Contains a string no-results .
         */
        const customEvent = new Event('no-results', { composed: true, bubbles: true });
        customEvent.detail = 'NoFilterResults';
        this.dispatchEvent(customEvent);
      } else {
        const customEvent = new Event('results', { composed: true, bubbles: true });
        customEvent.detail = 'results';
        this.dispatchEvent(customEvent);
      }
    });
  }

  /**
   * set the worklist-simple
   * fn-set-worklist-simple="--filterChanged"
   */
  setFilter(filter) {
    this._FBPTriggerWire('--filterChanged', filter);
  }

  /**
   * searchterm sets the qp q with ?q=searchterm
   *
   * On the agent we set the qp q, because we do not want autosearch
   * @public
   * @param searchterm
   */
  searchterm(searchterm) {
    this._FBPTriggerWire('|--searchQp', {q:searchterm});
  }

  /**
   * clear the search
   */
  clearSearch(e) {
    this._FBPTriggerWire('|--clearSearch', e);
  }

  list(e) {
    this._FBPTriggerWire('|--list', e);
  }

  first(e) {
    this._FBPTriggerWire('|--first', e);
  }

  next(e) {
    this._FBPTriggerWire('|--next', e);
  }

  prev(e) {
    this._FBPTriggerWire('|--prev', e);
  }

  last(e) {
    this._FBPTriggerWire('|--last', e);
  }

  /**
   *  Triggers a reload of the collection agent via furo-deep-link
   * @public
   * @param query
   */
  updateQueryParam(query) {
    this._FBPTriggerWire('--queryParamUpdated', query);
  }

  /**
   * htsIn Set hts as alternative to the QP
   * @public
   * @param hts
   */
  htsIn(hts) {
    this._FBPTriggerWire('|--htsIn', hts);
  }

  /**
   * Focuses the heading of the card, so you can navigate with the keyboard (up,down,enter)
   */
  focus() {
    setTimeout(()=>{
      this._FBPTriggerWire('|--focus', null);
    }, 128)
  }


  /**
   *
   * @param scrollPos
   * @param e {WheelEvent}
   * @private
   */
  _wheelHandler(scrollPos, e) {
    if (this._scrollLock === false) {
      const bottom = this.scroller.scrollHeight - this.scrollHeight;

      if (e.deltaY > 5 && scrollPos === bottom) {
        this._lockScrollHandler()
        this._FBPTriggerWire('--nextPageRequested', null);
      }

      if (e.deltaY < -5 && scrollPos === 0) {
        this._lockScrollHandler()
        this._FBPTriggerWire('--prevPageRequested', null);
      }
    }
  }

  _lockScrollHandler() {
    this._scrollLock = true
    this._debounceUnlock()
  }

  _unlock() {
    this._scrollLock = false
  }

  /**
   * Themable Styles
   * @private
   * @return {CSSResult}
   */
  static get styles() {
    // language=CSS
    return css`
      :host {
        display: block;
        height: 100%;
      }

      :host([hidden]) {
        display: none;
      }

      furo-ui5-busy-indicator {
        display: block;
      }


      /* width */
      ::-webkit-scrollbar {
        width: var(--sapScrollBar_Dimension, 0.75rem);
      }

      /* Track */
      ::-webkit-scrollbar-track {
        background: var(--sapScrollBar_TrackColor, #090b0d);
      }

      /* Handle */
      ::-webkit-scrollbar-thumb {
        background: var(--sapScrollBar_FaceColor, #91c8f6);
      }

      /* Handle on hover */
      ::-webkit-scrollbar-thumb:hover {
        background: var(--sapScrollBar_Hover_FaceColor, #4a5a6a);
      }
    `;
  }

  /**
   * @private
   * @returns {TemplateResult}
   * @private
   */
  render() {
    // language=HTML
    return html`
      <furo-vertical-flex>

      <furo-ui5-message-strip-display></furo-ui5-message-strip-display>
      <furo-ui5-message-strip
        message="Sorry, the services for the App are currently not available. We are working on it."
        fn-show-error="--err"
        fn-show-grpc-localized-message="--grpcError"
      ></furo-ui5-message-strip>

      <furo-ui5-busy-indicator
          flex
          scroll
        fn-activate="--reqStarted"
        fn-deactivate="--collectionResponse, --err"
        size="Small"
      >
        <furo-ui5-section noborder>
          <furo-ui5-subsection>
            <div slot="action">
              <furo-ui5-text-input
                content
                id="Search"
                placeholder="${i18n.t('placeholder.search')}"
                icon="search"
                  fn-focus="--escapeTable"
                wait="500"
                at-search-requested="--searchTerm" ></furo-ui5-text-input>
                <furo-keydown key="Escape" at-key="^^escape-pressed"></furo-keydown>
            </div>
            <!-- Table cards are a type of object group card, and display a set of items in a table format. -->
            <furo-ui5-table
                sticky-column-header=""
              at-arrow-down-on-last-row="--nextPageRequested"
              at-arrow-up-on-first-row="--prevPageRequested"
                fn-focus="|--focus"
              fn-focus-first="|--nextPageLoaded, |--firstPageLoaded, |--lastPageLoaded"
              fn-focus-last="|--prevPageLoaded"
              no-data-text="No data available"
              fn-bind-data="--collectionDao(*.entities)"
              mode="SingleSelect"
            >
                <furo-keydown key="Escape" at-key="--escapeTable"></furo-keydown>

              {{range $key,$type := .Var.InnerType.fields}}
              <ui5-table-column slot="columns" field="*.{{$key}}"></ui5-table-column>
              {{end}}


            </furo-ui5-table>
          </furo-ui5-subsection>
        </furo-ui5-section>
      </furo-ui5-busy-indicator>
      </furo-vertical-flex>

      <!-- Creates HATEOAS links according the set specification. Required for DeepLinking. -->
      <furo-deep-link
        service="{{.Var.Service.name}}"
        at-hts-out="--htsOut"
        fn-qp-in="--queryParamUpdated"
      ></furo-deep-link>

      <!-- API communication component. Required to handle collections.
      The search-hts-updated event will be catched in the view and passed down to the pagination bar
      -->
      <furo-collection-agent
        list-on-hts-in
        service="{{.Var.Service.name}}"
        at-hts-updated="^^search-hts-updated"
        at-request-started="--reqStarted"
        at-response="--collectionResponse"
        at-response-error="--err"
        at-response-error-400="--grpcError"
        at-fatal-error="--err"
        at-next-success="--nextPageLoaded"
        at-prev-success="--prevPageLoaded"
        at-first-success="--firstPageLoaded"
        at-last-success="--lastPageLoaded"
        fn-set-filter="--filterChanged"
        fn-set-qp="|--searchQp"
        fn-list="|--list"
        fn-first="|--first"
        fn-hts-in="--htsOut,|--htsIn"
        fn-last="|--last"
        fn-search="--searchTerm"
        fn-next="|--next, --nextPageRequested"
        fn-prev="|--prev, --prevPageRequested"
      ></furo-collection-agent>
      <!-- Client data model based on the set data type. -->
      <furo-data-object
        type="{{.Var.CollectionName}}"
        at-object-ready="--collectionDao"
        fn-inject-raw="--collectionResponse"
        fn-init="|--clearSearch"
      ></furo-data-object>
    `;
  }
}

window.customElements.define('{{.Var.SearchResultsComponentName}}', {{.Var.SearchResultsClassName}});
